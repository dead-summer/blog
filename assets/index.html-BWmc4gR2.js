import{a as s,c as e,b as a,o as t}from"./app-CAzY0Upz.js";const n={};function r(l,i){return t(),e("div",null,i[0]||(i[0]=[a(`<h2 id="_1-修改-tomcat-端口" tabindex="-1"><a class="header-anchor" href="#_1-修改-tomcat-端口"><span>1. 修改 Tomcat 端口</span></a></h2><p>SpringBoot 允许开发者通过 <code>application.properties</code> 配置文件修改默认配置。如 Tomcat 默认端口为 <code>8080</code>，可以修改为更方便的 <code>80</code> 端口。</p><p>配置方法：</p><p>在 <code>application.properties</code> 文件中，使用 <code>key=value</code> 的格式进行配置。修改端口的配置如下：</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">server.port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改后，重新运行程序即可生效。SpringBoot 将配置信息集中管理，简化了配置文件的管理，避免了在多个配置文件中查找和修改配置的麻烦。</p><h2 id="_2-springboot-配置的核心信息" tabindex="-1"><a class="header-anchor" href="#_2-springboot-配置的核心信息"><span>2. SpringBoot 配置的核心信息</span></a></h2><p>通过修改端口的示例，可以总结出以下三个核心信息：</p><ol><li>SpringBoot 程序可以在 <code>application.properties</code> 文件中进行属性配置。</li><li>在 <code>application.properties</code> 文件中，输入要配置的属性关键字时，会有智能提示。</li><li>SpringBoot 将所有配置信息集中在一个文件中，如服务器配置和数据库配置，避免了项目存在多种配置文件格式的混乱局面。</li></ol><h2 id="_3-其他常用配置" tabindex="-1"><a class="header-anchor" href="#_3-其他常用配置"><span>3. 其他常用配置</span></a></h2><p>除了修改端口，还可以进行其他常用配置，例如：</p><ul><li><strong>关闭运行日志图表 (banner)</strong></li></ul><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spring.main.banner-mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">off</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>设置运行日志的显示级别</strong></li></ul><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">logging.level.root</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">debug</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>SpringBoot 统一了配置格式，开发者无需在不同的技术配置文件中来回切换，提高了开发效率。</p><h4 id="_4-配置项的来源与依赖" tabindex="-1"><a class="header-anchor" href="#_4-配置项的来源与依赖"><span>4. 配置项的来源与依赖</span></a></h4><p>配置项并非随意编写，SpringBoot 提供了官方文档，其中包含了所有可配置的选项。</p><ul><li><strong>SpringBoot 官方文档：</strong> <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#application-properties" target="_blank" rel="noopener noreferrer">https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#application-properties</a></li></ul><p>配置项与所使用的技术相关。例如，只有引入了 <code>spring-boot-starter-web</code> 才能配置 Web 相关的属性。如果注释掉 <code>pom.xml</code> 文件中导入的 <code>spring-boot-starter-web</code> 依赖，配置提示将会消失。</p><p>所有 Starter 都会依赖 <code>spring-boot-starter</code>，它是 SpringBoot 的基础依赖，定义了 SpringBoot 相关的基础配置。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">org.springframework.boot</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">spring-boot-starter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">2.5.4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">scope</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">compile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">scope</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22)]))}const h=s(n,[["render",r]]),d=JSON.parse('{"path":"/notes/HMSpringBoot/blzrrssm/","title":"2-1.属性配置","lang":"zh-CN","frontmatter":{"title":"2-1.属性配置","createTime":"2025/07/15 23:02:20","permalink":"/notes/HMSpringBoot/blzrrssm/"},"readingTime":{"minutes":1.72,"words":516},"git":{"createdTime":1752578290000,"updatedTime":1752637938000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/1.基础篇/2.SpringBoot基础配置/2-1.属性配置.md","headers":[]}');export{h as comp,d as data};
