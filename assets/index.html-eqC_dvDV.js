import{a as i,c as t,b as e,o as d}from"./app-CAzY0Upz.js";const a={};function n(h,s){return d(),t("div",null,s[0]||(s[0]=[e(`<h2 id="逻辑执行顺序" tabindex="-1"><a class="header-anchor" href="#逻辑执行顺序"><span>逻辑执行顺序</span></a></h2><p>在 SQL 查询中，关键字的执行顺序遵循一个逻辑流程，该流程由数据库引擎（如 InnoDB）定义，但实际物理执行可能由优化器（Optimizer）根据统计信息、索引、查询类型等因素进行调整。优化器会重写查询计划以提高性能，但逻辑顺序始终是理解查询的基础。</p><p>以下是一个典型查询语句的执行顺序详解：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">COUNT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> employee_count</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> employees</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">JOIN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> departments </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> employees</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">department_id</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> departments</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">id</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WHERE</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> employees</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">salary</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50000</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">GROUP BY</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> departments</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">name</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">HAVING</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> COUNT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ORDER BY</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> name</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">LIMIT</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>顺序</th><th>语句</th><th>作用</th><th>本例</th></tr></thead><tbody><tr><td>1</td><td><code>FROM</code></td><td>识别数据来源的表。</td><td><code>employees</code> 和 <code>departments</code></td></tr><tr><td>2</td><td><code>ON</code></td><td>处理 <code>JOIN</code> 的关联条件，生成临时结果集。</td><td><code>employees.department_id = departments.id</code></td></tr><tr><td>3</td><td><code>JOIN</code></td><td>合并关联的表数据，形成中间结果集。</td><td>合并基于 <code>ON</code> 条件进行内连接</td></tr><tr><td>4</td><td><code>WHERE</code></td><td>对 <code>JOIN</code> 操作后的结果应用过滤条件，过滤掉不符合条件的行。</td><td><code>employees.salary &gt; 50000</code></td></tr><tr><td>5</td><td><code>GROUP BY</code></td><td>对 <code>WHERE</code> 过滤后的数据按指定字段分组，生成分组聚合结果。</td><td><code>departments.name</code></td></tr><tr><td>6</td><td><code>HAVING</code></td><td>筛选分组后的数据，仅保留满足条件的分组。</td><td><code>COUNT(*) &gt; 10</code></td></tr><tr><td>7</td><td><code>SELECT</code></td><td>选择需要返回的字段，并计算表达式或别名。</td><td><code>name</code> 和 <code>COUNT(*)</code></td></tr><tr><td>8</td><td><code>DISTINCT</code></td><td>去除重复的行（如果查询包含 <code>DISTINCT</code> 关键字）。</td><td>-</td></tr><tr><td>9</td><td><code>ORDER BY</code></td><td>对最终结果集排序。</td><td><code>ORDER BY name</code></td></tr><tr><td>10</td><td><code>LIMIT</code></td><td>限制返回的行数，这是查询的最后一步。</td><td><code>LIMIT 5</code></td></tr></tbody></table><p>上述顺序是逻辑上的，优化器可能调整物理执行（如重排序 <code>WHERE</code> 和 <code>JOIN</code> 以利用索引）。</p>`,6)]))}const k=i(a,[["render",n]]),p=JSON.parse('{"path":"/notes/interview/8ympdze3/","title":"查询关键字的执行顺序","lang":"zh-CN","frontmatter":{"title":"查询关键字的执行顺序","createTime":"2025/08/30 17:39:00","permalink":"/notes/interview/8ympdze3/"},"readingTime":{"minutes":1.4,"words":419},"git":{"createdTime":1756719850000,"updatedTime":1756721248000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/八股文自救指南/MySQL/查询关键字的执行顺序.md","headers":[]}');export{k as comp,p as data};
