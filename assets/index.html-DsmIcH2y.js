import{a as s,c as a,b as n,o as t}from"./app-CAzY0Upz.js";const e={};function l(p,i){return t(),a("div",null,i[0]||(i[0]=[n(`<p>当 Maven 和 Spring Boot 同时配置多环境时，需要理清它们之间的关系，明确谁应该具有主导地位。由于 Maven 负责项目构建和包的生成，而 Spring Boot 的主要目标是简化开发，因此应该以 Maven 的配置为主。</p><p><strong>解决方案：以 Maven 为主导，Spring Boot 读取 Maven 配置</strong></p><h2 id="_1-在-maven-中设置具体环境" tabindex="-1"><a class="header-anchor" href="#_1-在-maven-中设置具体环境"><span><strong>1. 在 Maven 中设置具体环境</strong></span></a></h2><p>通过 Maven 的 <code>&lt;profiles&gt;</code> 标签，使用属性方式来区分不同的环境。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profiles</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">env_dev</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">properties</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">			&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile.active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dev</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile.active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">properties</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">activation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">			&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">activeByDefault</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">activeByDefault</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!--默认启动环境--&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">activation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">env_pro</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">properties</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">			&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile.active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pro</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile.active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">properties</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">profiles</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码定义了两个 profile，<code>env_dev</code> 和 <code>env_pro</code>，分别代表开发环境和生产环境。通过 <code>&lt;properties&gt;</code> 标签设置 <code>profile.active</code> 属性来指定当前激活的环境。<code>&lt;activation&gt;</code> 标签中的 <code>&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</code> 表示默认激活 <code>env_dev</code> 环境。</p><h2 id="_2-在-spring-boot-中读取-maven-设置的值" tabindex="-1"><a class="header-anchor" href="#_2-在-spring-boot-中读取-maven-设置的值"><span><strong>2. 在 Spring Boot 中读取 Maven 设置的值</strong></span></a></h2><p>在 Spring Boot 的 <code>application.yml</code> 或 <code>application.properties</code> 文件中，使用 <code>@属性名@</code> 的语法来读取 Maven 中配置的属性值。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spring</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">	profiles</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">		active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> @</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">profile.active@</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的 YAML 配置文件中，<code>spring.profiles.active</code> 属性的值被设置为 <code>@profile.active@</code>，这会指示 Spring Boot 从 Maven 的 <code>profile.active</code> 属性中读取当前激活的 profile。通过这种方式，Spring Boot 能够与 Maven 的环境配置保持同步。</p><p><strong>总结</strong></p><ul><li>当 Maven 和 Spring Boot 同时进行多环境控制时，应以 Maven 为主导。Spring Boot 通过 <code>@... @</code> 占位符读取 Maven 对应的配置属性值。</li><li>基于 Spring Boot 读取 Maven 配置属性的前提下，如果在 IDEA 下测试工程时 pom.xml 每次更新需要手动 compile 方可生效。</li></ul>`,12)]))}const k=s(e,[["render",l]]),r=JSON.parse('{"path":"/notes/HMSpringBoot/16s6tvks/","title":"3-5.多环境开发控制","lang":"zh-CN","frontmatter":{"title":"3-5.多环境开发控制","createTime":"2025/06/23 14:18:05","permalink":"/notes/HMSpringBoot/16s6tvks/"},"readingTime":{"minutes":1.42,"words":426},"git":{"createdTime":1752578290000,"updatedTime":1752578290000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/2.运维实用篇/3.多环境开发/3-5.多环境开发控制.md","headers":[]}');export{k as comp,r as data};
