import{a as s,c as a,b as n,o as h}from"./app-CAzY0Upz.js";const e="/blog/assets/2-1.%E4%B8%B4%E6%97%B6%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE-20250623111128753-DEry3_W4.png",l="/blog/assets/2-1.%E4%B8%B4%E6%97%B6%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE-20250623112950423-O4ftA98w.png",t={};function k(p,i){return h(),a("div",null,i[0]||(i[0]=[n('<h2 id="_1-临时属性设置" tabindex="-1"><a class="header-anchor" href="#_1-临时属性设置"><span>1. 临时属性设置</span></a></h2><p>在 Spring Boot 项目打包发布后，如果需要修改某些配置（例如端口号），可以使用临时属性的方式，无需修改已打包的程序。</p><p>Spring Boot 允许在启动时通过命令行参数设置临时属性，以覆盖配置文件中的属性。</p><h3 id="_1-1-使用方法" tabindex="-1"><a class="header-anchor" href="#_1-1-使用方法"><span>1.1 使用方法</span></a></h3><p>在启动命令后添加 <code>--属性名=属性值</code> 的形式，多个属性之间用空格分隔。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">java </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">jar </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">springboot</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">jar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> --</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">80</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> --</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">logging</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">level</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">root</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">debug</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>属性名：采用 properties 文件中的格式，多级名称使用点分隔。</li><li>注意：这里的格式不是 YAML 格式。</li></ul><h3 id="_1-2-属性加载优先级" tabindex="-1"><a class="header-anchor" href="#_1-2-属性加载优先级"><span>1.2 属性加载优先级</span></a></h3><p>临时属性的加载优先级高于配置文件。Spring Boot 有多种配置加载方式，其优先级顺序如下（从低到高）：</p><ol><li>Config data（配置文件）</li><li>Command line arguments（命令行临时参数）</li></ol><p>Spring Boot 外部配置优先级列表可在官方文档中查询：<a href="https://docs.spring.io/spring-boot/reference/features/external-config.html" target="_blank" rel="noopener noreferrer">Externalized Configuration</a></p><p>当属性值与预期不符时，检查是否有更高优先级的属性覆盖了配置。例如，系统属性 <code>user.name</code> 可能会覆盖配置文件中的 <code>user.name</code> 属性。</p><p>现在我们了解了如何通过临时属性来覆盖配置文件中的属性，以及属性加载的优先级顺序。接下来，我们将探讨如何在开发环境中使用临时属性，以便在上线前进行充分的测试。</p><h2 id="_2-开发环境中使用临时属性" tabindex="-1"><a class="header-anchor" href="#_2-开发环境中使用临时属性"><span>2. 开发环境中使用临时属性</span></a></h2><p>在开发环境（如 IntelliJ IDEA）中，可以通过配置运行参数来设置临时属性：</p><ol><li>打开 Spring Boot 引导类的运行配置界面。 <img src="'+e+'" alt="2-1.临时属性设置-20250623111128753" width="750" style="display:block;margin:auto;"></li><li>在 &quot;Program arguments&quot; (程序参数) 对应的位置添加临时属性，格式与命令行相同 (<code>--属性名=属性值</code>)。 <img src="'+l+`" alt="2-1.临时属性设置-20250623112950423" width="750" style="display:block;margin:auto;"></li></ol><h3 id="_2-1-原理分析" tabindex="-1"><a class="header-anchor" href="#_2-1-原理分析"><span>2.1 原理分析</span></a></h3><p>在 <code>main</code> 方法中传递的 <code>args</code> 参数，包含了在 IDEA 中配置的临时参数。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    SpringApplication</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">SSMPApplication</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SpringApplication.run()</code> 方法接收 <code>args</code> 参数，从而将临时属性传递到 Spring Boot 程序中。</p><h3 id="_2-2-自定义配置" tabindex="-1"><a class="header-anchor" href="#_2-2-自定义配置"><span>2.2 自定义配置</span></a></h3><ul><li><p>可以修改 <code>main</code> 方法的调用方式，阻止外部临时属性进入 Spring Boot 程序。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    SpringApplication</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">SSMPApplication</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 不传递 args 参数</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>或者，将配置直接写成字符串数组，传递给程序入口。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> arg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">];</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    arg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">--server.port=8082</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    SpringApplication</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">SSMPApplication</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> arg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 这种做法没有实际开发意义，通常不使用。</p></li></ul>`,22)]))}const d=s(t,[["render",k]]),g=JSON.parse('{"path":"/notes/HMSpringBoot/puokxq22/","title":"2-1.临时属性设置","lang":"zh-CN","frontmatter":{"title":"2-1.临时属性设置","createTime":"2025/06/23 10:43:23","permalink":"/notes/HMSpringBoot/puokxq22/"},"readingTime":{"minutes":2.4,"words":721},"git":{"createdTime":1752578290000,"updatedTime":1752578290000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/2.运维实用篇/2.配置高级/2-1.临时属性设置.md","headers":[]}');export{d as comp,g as data};
