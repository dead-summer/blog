import{a as i,c as a,b as e,o as t}from"./app-CAzY0Upz.js";const n="/blog/assets/1-1.%E6%89%8B%E5%8A%A8%E5%90%AF%E5%8A%A8%E7%83%AD%E9%83%A8%E7%BD%B2-20250623172253220-HaEtfULi.png",l={};function r(d,s){return t(),a("div",null,s[0]||(s[0]=[e(`<p>本节主要介绍如何在 Spring Boot 项目中手动启用热部署功能，以便在开发过程中能够快速地应用代码变更，而无需完全重启应用。</p><h2 id="_1-手动启动热部署" tabindex="-1"><a class="header-anchor" href="#_1-手动启动热部署"><span><strong>1. 手动启动热部署</strong></span></a></h2><h3 id="步骤-1-添加-spring-boot-devtools-依赖" tabindex="-1"><a class="header-anchor" href="#步骤-1-添加-spring-boot-devtools-依赖"><span><strong>步骤 1. 添加 <code>spring-boot-devtools</code> 依赖</strong></span></a></h3><p>首先，需要在 <code>pom.xml</code> 文件中添加 Spring Boot 开发者工具 (<code>spring-boot-devtools</code>) 的依赖。这个依赖提供了热部署和其他有用的开发时特性。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">org.springframework.boot</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">spring-boot-devtools</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;optional&gt;true&lt;/optional&gt;</code> 表示该依赖是可选的，这意味着在生产环境中，如果不需要热部署功能，可以很容易地排除这个依赖。</p><h3 id="步骤-2-构建项目以激活热部署" tabindex="-1"><a class="header-anchor" href="#步骤-2-构建项目以激活热部署"><span><strong>步骤 2. 构建项目以激活热部署</strong></span></a></h3><p>添加依赖后，需要构建项目以激活热部署功能。可以使用 IDEA 提供的构建功能。</p><img src="`+n+'" alt="1-1.手动启动热部署-20250623172253220" width="750" style="display:block;margin:auto;"><h2 id="_2-重启与重载的底层工作原理" tabindex="-1"><a class="header-anchor" href="#_2-重启与重载的底层工作原理"><span><strong>2. 重启与重载的底层工作原理</strong></span></a></h2><p>Spring Boot 应用在运行时，类加载器被划分为两个主要类别：<code>base</code> 类加载器和 <code>restart</code> 类加载器。理解它们的区别对于理解热部署的工作原理至关重要。</p><ul><li><strong><code>base</code> 类加载器</strong>：负责加载 <code>jar</code> 包中的类。由于 <code>jar</code> 包中的类和配置文件通常不会在开发过程中发生变化，因此 <code>base</code> 类加载器加载的内容在多次加载之间保持不变。</li><li><strong><code>restart</code> 类加载器</strong>：负责加载开发者自己编写的类、配置文件以及页面等信息。这些文件是开发过程中经常变动的部分。</li></ul><p>当 Spring Boot 应用启动时，<code>base</code> 类加载器首先执行，加载 <code>jar</code> 包中的信息。然后，<code>restart</code> 类加载器执行，加载开发者编写的内容。</p><p>当执行构建项目操作后，由于 <code>jar</code> 包中的信息没有变化，因此 <code>base</code> 类加载器不需要再次执行。只需要运行 <code>restart</code> 类加载器，重新加载开发者修改的内容，从而完成热部署的过程。本质上，热部署就是重新加载 <code>restart</code> 类加载器中的信息。</p>',14)]))}const p=i(l,[["render",r]]),h=JSON.parse('{"path":"/notes/HMSpringBoot/96glkz0l/","title":"1-1.手动启动热部署","lang":"zh-CN","frontmatter":{"title":"1-1.手动启动热部署","createTime":"2025/06/23 16:08:45","permalink":"/notes/HMSpringBoot/96glkz0l/"},"readingTime":{"minutes":1.95,"words":586},"git":{"createdTime":1752578290000,"updatedTime":1752578290000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/3.开发实用篇/1.热部署/1-1.手动启动热部署.md","headers":[]}');export{p as comp,h as data};
