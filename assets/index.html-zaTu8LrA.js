import{a as i,c as a,b as e,o as n}from"./app-CAzY0Upz.js";const d={};function t(l,s){return n(),a("div",null,s[0]||(s[0]=[e(`<p>最近一名开发者在使用 Spring 属性注入时遇到了一个问题，这个问题是由 Bean 的属性注入引发的，最终导致了线上事故。这个问题具有一定的代表性，因此在这里分享给大家，希望能引起大家的重视。</p><h4 id="_1-问题描述" tabindex="-1"><a class="header-anchor" href="#_1-问题描述"><span>1. 问题描述</span></a></h4><p>该开发者在连接数据库时配置正确，但程序运行时却报出密码错误：</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">java.sql.SQLException: Access denied </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> user </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&#39;root&#39;@&#39;localhost&#39; (using password: YES)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个错误提示表明用户名和密码不匹配，但实际上密码并没有输入错误。</p><h4 id="_2-问题分析" tabindex="-1"><a class="header-anchor" href="#_2-问题分析"><span>2. 问题分析</span></a></h4><p>开发者在 <code>application.yml</code> 文件中配置了数据库连接信息，密码设置为 <code>0127</code>，如下所示：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spring</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  datasource</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    driver-class-name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jdbc:mysql://localhost:3306/ssm_db?serverTimezone=UTC</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    username</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> root</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    password</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0127</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题就出在密码 <code>0127</code> 上。在 Spring Boot 中，YAML 文件中的数字默认支持八进制格式。因此，<code>0127</code> 被 Spring Boot 识别为一个八进制数，转换成十进制后变成了 <code>87</code>。最终，程序使用错误的密码 <code>87</code> 连接数据库，导致密码错误。</p><h4 id="_3-根本原因" tabindex="-1"><a class="header-anchor" href="#_3-根本原因"><span>3. 根本原因</span></a></h4><p>在基础篇讲解属性注入时，我们提到过整数类型支持二进制、八进制和十六进制的表示方式。当后台使用 <code>String</code> 类型接收数据时，如果配置文件中配置了一个整数值，程序会先按照整数进行处理，读取后再转换成字符串。因此，<code>0127</code> 被 Spring Boot 识别为一个八进制数，并转换为了十进制数 <code>87</code>。</p><h4 id="_4-注意事项" tabindex="-1"><a class="header-anchor" href="#_4-注意事项"><span>4. 注意事项</span></a></h4><ol><li><strong>字符串标准书写加上引号包裹，养成习惯。</strong> 在 YAML 文件中，为了明确指定一个值为字符串类型，应该使用引号将其包裹起来，例如 <code>&quot;0127&quot;</code>。</li><li><strong>遇到 0 开头的数据多注意。</strong> 在处理以 <code>0</code> 开头的数据时，要特别注意其是否会被解析为八进制数。</li></ol>`,13)]))}const h=i(d,[["render",t]]),p=JSON.parse('{"path":"/notes/HMSpringBoot/ja4fpdfu/","title":"2-5.数据类型转换","lang":"zh-CN","frontmatter":{"title":"2-5.数据类型转换","createTime":"2025/06/24 15:26:05","permalink":"/notes/HMSpringBoot/ja4fpdfu/"},"readingTime":{"minutes":1.72,"words":515},"git":{"createdTime":1752578290000,"updatedTime":1752578290000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/3.开发实用篇/2.配置高级/2-5.数据类型转换.md","headers":[]}');export{h as comp,p as data};
