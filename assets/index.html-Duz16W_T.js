import{a as o,c as t,b as a,o as r}from"./app-CAzY0Upz.js";const c={};function d(s,e){return r(),t("div",null,e[0]||(e[0]=[a('<h2 id="_7-1-什么是封装" tabindex="-1"><a class="header-anchor" href="#_7-1-什么是封装"><span>7.1 什么是封装？</span></a></h2><p>封装是面向对象编程中的一个重要特性，它指的是在设计对象处理某个事物的数据时，将要处理的数据以及处理数据的方法都设计到一个对象中。例如，在设计学生类时，将学生对象的姓名、语文成绩、数学成绩等属性，以及求学生总分、平均分的方法，都封装到学生对象中。</p><p>封装的设计规范可以用八个字概括：<strong>合理隐藏、合理暴露</strong>。</p><ul><li><strong>合理隐藏</strong>：将对象内部的实现细节隐藏起来，不让外部直接访问。这样做可以提高安全性，防止外部不恰当的修改导致对象状态出错。例如，汽车的发动机、变速箱等部件对驾驶员来说是不需要了解的细节，因此被隐藏在汽车内部。</li><li><strong>合理暴露</strong>：对外提供必要的接口，让外部可以安全地操作对象。例如，汽车的方向盘、油门、刹车等部件是暴露给驾驶员的接口，驾驶员可以通过这些接口来控制汽车。</li></ul><h2 id="_7-2-封装在代码中的体现" tabindex="-1"><a class="header-anchor" href="#_7-2-封装在代码中的体现"><span>7.2 封装在代码中的体现</span></a></h2><p>在代码中，封装通常通过将成员变量隐藏，然后将操作成员变量的方法对外暴露来实现。这需要用到 <code>private</code> 修饰符。<strong>被 <code>private</code> 修饰的变量或者方法，只能在本类中被访问。</strong></p><p>例如，<code>private double score;</code> 将 <code>score</code> 变量封装在 <code>Student</code> 对象的内部，使其不对外暴露。如果想在其他类中访问 <code>score</code> 变量，不能直接访问。</p><ul><li><strong>设置 <code>score</code> 属性</strong>：需要调用对外暴露的方法 <code>setScore(int score)</code>，在这个方法中可以对调用者传递过来的数据进行一些控制，确保数据的有效性和安全性。</li><li><strong>获取 <code>score</code> 变量的值</strong>：需要调用对外暴露的另一个方法 <code>getScore()</code>。</li></ul><p>通过 <code>get</code> 和 <code>set</code> 方法，我们可以控制对内部数据的访问，从而实现更好的封装性。例如，<code>setScore</code> 方法可以检查传入的分数是否在合理范围内，从而避免无效数据。</p>',9)]))}const i=o(c,[["render",d]]),p=JSON.parse('{"path":"/notes/HMJava/wo2v5cpb/","title":"封装性","lang":"zh-CN","frontmatter":{"title":"封装性","createTime":"2025/07/01 21:30:33","permalink":"/notes/HMJava/wo2v5cpb/"},"readingTime":{"minutes":1.89,"words":568},"git":{"createdTime":1752578196000,"updatedTime":1752578196000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员Java/1.基础入门/7.面向对象基础/7.封装性.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"7d7e6e","sort":10001,"name":"黑马程序员Java"},{"id":"31ae4c","sort":1,"name":"基础入门"},{"id":"f94128","sort":7,"name":"面向对象基础"}]}');export{i as comp,p as data};
