import{a as i,c as a,b as t,o as e}from"./app-CAzY0Upz.js";const n={};function l(h,s){return e(),a("div",null,s[0]||(s[0]=[t(`<p>在完成了两种技术的整合之后，我们需要进行总结，理解整合的核心内容。整合的核心可以概括为以下两点：</p><ul><li>导入对应技术的 starter 坐标。</li><li>根据对应技术的要求进行配置。</li></ul><p>接下来，我们将在 MyBatis 的基础上整合 MyBatis-Plus（简称 MP），这是一个由国人开发的技术，更符合中国开发者的习惯。</p><h2 id="_1-spring-boot-整合-mybatis-plus" tabindex="-1"><a class="header-anchor" href="#_1-spring-boot-整合-mybatis-plus"><span>1. Spring Boot 整合 MyBatis-Plus</span></a></h2><h3 id="步骤-1-导入对应的-starter" tabindex="-1"><a class="header-anchor" href="#步骤-1-导入对应的-starter"><span><strong>步骤 1：导入对应的 starter</strong></span></a></h3><p>在 <code>pom.xml</code> 文件中添加以下依赖：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">com.baomidou</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">mybatis-plus-boot-starter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">3.4.3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，通常我们看到的 starter 命名格式为 <code>spring-boot-starter-***</code>，而 MyBatis-Plus 的 starter 命名比较特殊，采用了 <code>第三方技术名称-boot-starter</code> 的格式。以下是不同情况下 starter 的命名规则：</p><table><thead><tr><th>starter 所属</th><th>命名规则</th><th>示例</th></tr></thead><tbody><tr><td>官方提供</td><td>spring-boot-starter- 技术名称</td><td>spring-boot-starter-web spring-boot-starter-test</td></tr><tr><td>第三方提供</td><td>第三方技术名称 -spring-boot-starter</td><td>druid-spring-boot-starter</td></tr><tr><td>第三方提供</td><td>第三方技术名称 -boot-starter（第三方技术名称过长时，简化命名）</td><td>mybatis-plus-boot-starter</td></tr></tbody></table><h3 id="步骤-2-配置数据源相关信息" tabindex="-1"><a class="header-anchor" href="#步骤-2-配置数据源相关信息"><span><strong>步骤 2：配置数据源相关信息</strong></span></a></h3><p>在 <code>application.yml</code> 文件中配置数据源信息：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#2.配置相关信息</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spring</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  datasource</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">	driver-class-name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">	url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jdbc:mysql://localhost:3306/ssm_db</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">	username</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> root</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">	password</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-编写-mybatis-plus-的代码" tabindex="-1"><a class="header-anchor" href="#_2-编写-mybatis-plus-的代码"><span>2. 编写 MyBatis-Plus 的代码</span></a></h2><p>创建一个 Dao 接口，并继承 <code>BaseMapper</code> 接口：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Mapper</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> interface</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> BookDao</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> BaseMapper</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Book</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>BaseMapper</code> 接口是 MyBatis-Plus 提供的基础接口，其中预定义了一些常用的 API 接口，可以简化通用 API 接口的开发。</p><p>如果数据库的表名定义规则是 <code>tbl_模块名称</code>，为了能和实体类相对应，需要在 <code>application.yml</code> 文件中添加如下配置，设置所有表名的通用前缀名：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">mybatis-plus</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  global-config</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    db-config</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      table-prefix</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tbl_#设置所有表的通用前缀名称为tbl_</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过以上配置，MyBatis-Plus 会自动为表名添加 <code>tbl_</code> 前缀，从而实现表名与实体类的对应。</p>`,19)]))}const d=i(n,[["render",l]]),p=JSON.parse('{"path":"/notes/HMSpringBoot/3kkzotm1/","title":"3-3.整合 MyBatis-Plus","lang":"zh-CN","frontmatter":{"title":"3-3.整合 MyBatis-Plus","createTime":"2025/07/15 23:02:20","permalink":"/notes/HMSpringBoot/3kkzotm1/"},"readingTime":{"minutes":1.77,"words":530},"git":{"createdTime":1752578290000,"updatedTime":1752637938000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/1.基础篇/3.基于SpringBoot实现SSMP整合/3-3.整合 MyBatis-Plus.md","headers":[]}');export{d as comp,p as data};
