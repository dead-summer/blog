import{a as i,c as t,b as s,o as n}from"./app-CAzY0Upz.js";const a={};function r(l,e){return n(),t("div",null,e[0]||(e[0]=[s('<h2 id="cap-定理简介" tabindex="-1"><a class="header-anchor" href="#cap-定理简介"><span>CAP 定理简介</span></a></h2><p>CAP 定理指出，在分布式系统中，当网络分区发生时（即节点间通信中断），系统只能同时满足以下三者中的两个：</p><ul><li><strong>一致性 (Consistency)</strong>：所有节点在同一时间读取到相同的数据。</li><li><strong>可用性 (Availability)</strong>：系统始终响应读写请求，即使在故障状态下。</li><li><strong>分区容忍性 (Partition tolerance)</strong>：系统在分区发生时继续运行。</li></ul><p>Redis 的设计目标强调高性能、高可扩展性和高可用性，因此它选择优先保证 <strong>A</strong> 和 <strong>P</strong>，而非 <strong>C</strong>。</p><h2 id="redis-的-ap-特性" tabindex="-1"><a class="header-anchor" href="#redis-的-ap-特性"><span>Redis 的 AP 特性</span></a></h2><ol><li><p><strong>保证可用性 (A)</strong>：</p><ul><li>当发生网络分区或节点故障时，Redis 仍允许客户端执行读写操作。例如，在主节点不可用时，从节点可以继续处理读请求（尽管数据可能不是最新）。</li><li>这确保了系统的高可用性，避免因分区导致的服务中断。</li></ul></li><li><p><strong>牺牲强一致性 (C)</strong>：</p><ul><li>Redis 保证 <strong>最终一致性</strong>（Eventual Consistency），而非强一致性。这意味着在数据更新后，不同节点可能在短时间内读取到不一致的数据，但系统最终会通过异步机制达到一致状态。</li><li>例如，在主从复制中，主节点写入数据后，从节点通过异步复制同步数据，这可能导致延迟（如毫秒级）和临时不一致。</li></ul></li><li><p><strong>复制机制的影响</strong>：</p><ul><li>Redis 默认使用 <strong>异步复制</strong>（Asynchronous Replication）进行主从数据同步。这提升了性能，但引入了数据延迟和不一致的风险。</li><li>即使改用同步复制（Synchronous Replication），Redis 也无法保证强一致性。原因包括： <ul><li>故障转移（Failover）过程可能导致数据丢失或不一致。</li><li>网络延迟或节点故障时，系统优先确保可用性而非即时一致性。</li></ul></li></ul></li></ol>',6)]))}const d=i(a,[["render",r]]),c=JSON.parse('{"path":"/notes/interview/fn79aek6/","title":"Redis是AP还是CP","lang":"zh-CN","frontmatter":{"title":"Redis是AP还是CP","createTime":"2025/09/05 17:18:06","permalink":"/notes/interview/fn79aek6/"},"readingTime":{"minutes":1.63,"words":489},"git":{"createdTime":1757065439000,"updatedTime":1757065439000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/八股文自救指南/Redis/Redis是AP还是CP.md","headers":[]}');export{d as comp,c as data};
