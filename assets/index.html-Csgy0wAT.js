import{a as s,c as e,b as a,o as l}from"./app-CAzY0Upz.js";const n={};function t(d,i){return l(),e("div",null,i[0]||(i[0]=[a(`<h2 id="_1-配置文件分类" tabindex="-1"><a class="header-anchor" href="#_1-配置文件分类"><span>1. 配置文件分类</span></a></h2><p>SpringBoot 支持多种配置文件格式，包括 <code>properties</code>、<code>yml</code> 和 <code>yaml</code>。<code>yml</code> 和 <code>yaml</code> 格式除了文件后缀名不同外，格式完全一样，可以视为同一种格式。在实际开发中，<code>yml</code> 格式应用最为广泛。</p><p>以下是三种不同文件格式配置相同属性的示例：</p><ul><li>application.properties (properties 格式)</li></ul><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">server.port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>application.yml (yml 格式)</li></ul><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 81</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>application.yaml (yaml 格式)</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 82</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，我们将探讨当这三种配置文件同时存在时，它们的优先级是怎样的。</p><h2 id="_2-配置文件优先级" tabindex="-1"><a class="header-anchor" href="#_2-配置文件优先级"><span>2. 配置文件优先级</span></a></h2><p>当 <code>application.properties</code>、<code>application.yml</code> 和 <code>application.yaml</code> 同时存在时，配置文件的加载优先级顺序为：<code>application.properties &gt; application.yml &gt; application.yaml</code>。这意味着 <code>application.properties</code> 的优先级最高，<code>application.yaml</code> 的优先级最低。</p><p>以下是一个例子，展示了不同配置文件中的相同配置项如何被优先级较高的文件覆盖：</p><ul><li>application.properties (properties 格式)</li></ul><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">server.port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>application.yml (yml 格式)</li></ul><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 81</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>application.yaml (yaml 格式)</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 82</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，最终生效的端口号将是 80，因为 <code>application.properties</code> 具有最高的优先级。</p><p>但是，如果不同的配置文件包含不同的配置项，那么所有的配置项都会生效。例如：</p><ul><li>application.properties (properties 格式)</li></ul><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">server.port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">80</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spring.main.banner-mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">off</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>application.yml (yml 格式)</li></ul><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 81</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">logging</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  level</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    root</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> debug</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>application.yaml (yaml 格式)</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 82</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，最终生效的端口号是 80（来自 <code>application.properties</code>），<code>spring.main.banner-mode=off</code> 也会生效（同样来自 <code>application.properties</code>），<code>logging.level.root=debug</code> 也会生效（来自 <code>application.yml</code>）。</p><p><strong>总结：</strong></p><ol><li>配置文件间的加载优先级为：<code>properties</code> (最高) &gt; <code>yml</code> &gt; <code>yaml</code> (最低)</li><li>不同配置文件中相同的配置按照加载优先级相互覆盖，不同配置文件中不同的配置全部保留。</li></ol>`,30)]))}const p=s(n,[["render",t]]),h=JSON.parse('{"path":"/notes/HMSpringBoot/s5pbrdjm/","title":"2-2.配置文件分类","lang":"zh-CN","frontmatter":{"title":"2-2.配置文件分类","createTime":"2025/07/15 23:02:20","permalink":"/notes/HMSpringBoot/s5pbrdjm/"},"readingTime":{"minutes":1.54,"words":463},"git":{"createdTime":1752578290000,"updatedTime":1752637938000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/1.基础篇/2.SpringBoot基础配置/2-2.配置文件分类.md","headers":[]}');export{p as comp,h as data};
