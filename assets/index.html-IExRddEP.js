import{a as s,c as a,b as l,o as n}from"./app-CAzY0Upz.js";const e={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[l(`<p>在学习变量的基础上，本节将深入探讨数据在计算机底层是如何以二进制形式表示和存储的，以及不同类型的数据如何转换为二进制。</p><h2 id="_1-1-整数在计算机中的存储原理" tabindex="-1"><a class="header-anchor" href="#_1-1-整数在计算机中的存储原理"><span>1.1 整数在计算机中的存储原理</span></a></h2><p>任何数据在计算机中都是以<strong>二进制</strong>形式表示的。二进制是一种逢 2 进 1 的计数系统，与我们熟悉的十进制（逢 10 进 1）、八进制（逢 8 进 1）和十六进制（逢 16 进 1）并列。</p><h3 id="_1-1-1-二进制的概念及表示" tabindex="-1"><a class="header-anchor" href="#_1-1-1-二进制的概念及表示"><span>1.1.1 二进制的概念及表示</span></a></h3><ul><li><strong>二进制的特点</strong>：只包含 0 和 1 两个数字。</li><li><strong>与十进制的对应关系</strong>： <ul><li>0（十进制）= 0（二进制）</li><li>1（十进制）= 1（二进制）</li><li>2（十进制）= 10（二进制）</li><li>3（十进制）= 11（二进制）</li><li>4（十进制）= 100（二进制）</li></ul></li><li><strong>规律</strong>：二进制通过“逢 2 进 1”的方式来表示十进制数。</li></ul><p>我们可以通过连续加 1 的方式来推导二进制数，但更高效的方法是“除 2 取余法”。</p><h3 id="_1-1-2-除-2-取余法" tabindex="-1"><a class="header-anchor" href="#_1-1-2-除-2-取余法"><span>1.1.2 除 2 取余法</span></a></h3><ul><li><strong>方法</strong>：将十进制数连续除以 2，直到商为 0，然后将余数逆序排列。</li><li><strong>示例</strong>： <ul><li>十进制 6 转二进制： <ul><li>6 / 2 = 3，余 0</li><li>3 / 2 = 1，余 1</li><li>1 / 2 = 0，余 1</li><li>结果：110</li></ul></li><li>十进制 13 转二进制： <ul><li>13 / 2 = 6，余 1</li><li>6 / 2 = 3，余 0</li><li>3 / 2 = 1，余 1</li><li>1 / 2 = 0，余 1</li><li>结果：1101</li></ul></li></ul></li></ul><h3 id="_1-1-3-计算机的最小存储单位" tabindex="-1"><a class="header-anchor" href="#_1-1-3-计算机的最小存储单位"><span>1.1.3 计算机的最小存储单位</span></a></h3><ul><li><strong>字节（Byte）</strong>：计算机中最小的存储单位，1 字节等于 8 位（bit）。</li><li><strong>存储方式</strong>：即使数据转换成二进制后不足 8 位，也会占用 8 位来进行存储，空位补 0。</li></ul><h2 id="_1-2-字符在计算机中的存储原理" tabindex="-1"><a class="header-anchor" href="#_1-2-字符在计算机中的存储原理"><span>1.2 字符在计算机中的存储原理</span></a></h2><p>字符在计算机中并非直接存储，而是存储字符对应的整数的二进制形式。这种对应关系由编码表定义，例如 ASCII 编码。</p><p><strong>ASCII 编码：</strong></p><ul><li><strong>定义</strong>：一套字符与整数的对应关系标准，主要由美国制定。</li><li><strong>规律</strong>： <ul><li>字符 &#39;0&#39; 对应整数 48，&#39;1&#39;、&#39;2&#39; 等依次递增。</li><li>字符 &#39;a&#39; 对应整数 97，&#39;b&#39;、&#39;c&#39; 等依次递增。</li><li>字符 &#39;A&#39; 对应整数 65，&#39;B&#39;、&#39;C&#39; 等依次递增。</li></ul></li><li><strong>局限性</strong>：ASCII 编码不包含汉字。</li></ul><h2 id="_1-3-图片、视频和声音的存储原理" tabindex="-1"><a class="header-anchor" href="#_1-3-图片、视频和声音的存储原理"><span>1.3 图片、视频和声音的存储原理</span></a></h2><h3 id="_1-3-1-图片的存储" tabindex="-1"><a class="header-anchor" href="#_1-3-1-图片的存储"><span>1.3.1 图片的存储</span></a></h3><ul><li><strong>原理</strong>：图片由像素组成，每个像素是一种颜色。颜色可以用三原色（RGB）表示。</li><li><strong>RGB</strong>：红色（Red）、绿色（Green）、蓝色（Blue）。每种颜色用一个字节（8 位）的整数表示，范围是 0 到 255。</li><li><strong>颜色表示</strong>： <ul><li>RGB(0, 0, 0) 表示黑色。</li><li>RGB(255, 255, 255) 表示白色。</li><li>RGB(255, 0, 0) 表示红色。</li><li>RGB(255, 255, 0) 表示黄色。</li><li>RGB(255, 0, 255) 表示紫色。</li></ul></li><li><strong>存储方式</strong>：每个像素的 RGB 值被转换为二进制存储。</li></ul><h3 id="_1-3-2-视频的存储" tabindex="-1"><a class="header-anchor" href="#_1-3-2-视频的存储"><span>1.3.2 视频的存储</span></a></h3><ul><li><strong>原理</strong>：视频是连续播放的图片序列。</li><li><strong>视觉暂留</strong>：人眼对快速切换的图像产生连续的视觉效果。通常每秒播放 24 张以上的图片即可形成流畅的视频。</li></ul><h3 id="_1-3-3-声音的存储" tabindex="-1"><a class="header-anchor" href="#_1-3-3-声音的存储"><span>1.3.3 声音的存储</span></a></h3><ul><li><strong>原理</strong>：声音以波的形式传播。</li><li><strong>存储方式</strong>：将声波表示在坐标系上，取样点的坐标值以二进制形式存储。</li></ul><h2 id="_1-4-数据的其他表示形式" tabindex="-1"><a class="header-anchor" href="#_1-4-数据的其他表示形式"><span>1.4 数据的其他表示形式</span></a></h2><p>由于二进制书写不便，通常会转换为八进制或十六进制表示。</p><h2 id="_1-5-不同进制在-java-程序中的书写格式" tabindex="-1"><a class="header-anchor" href="#_1-5-不同进制在-java-程序中的书写格式"><span>1.5 不同进制在 Java 程序中的书写格式</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">a</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   // 98  字符 &#39;a&#39; 的 ASCII 码加 1</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0b01100001</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 97  二进制表示，以 0b 开头</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0141</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 97  八进制表示，以 0 开头</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0x61</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 97  十六进制表示，以 0x 开头</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码解释：</p><ul><li><code>System.out.println(&#39;a&#39; + 1);</code>：这行代码展示了字符 <code>&#39;a&#39;</code> 与整数相加的结果。在 Java 中，字符可以被当作整数处理，实际上是使用了字符的 ASCII 码值。字符 <code>&#39;a&#39;</code> 对应的 ASCII 码是 97，所以 <code>&#39;a&#39; + 1</code> 的结果是 98。</li><li><code>System.out.println(0b01100001);</code>：这行代码展示了二进制字面量在 Java 中的表示方式。<code>0b</code> 是 Java 中表示二进制数的<strong>前缀</strong>。<code>0b01100001</code> 这个二进制数转换为十进制是 97。</li><li><code>System.out.println(0141);</code>：这行代码展示了八进制字面量在 Java 中的表示方式。在 Java 中，以 <code>0</code> 开头的整数被认为是八进制数。<code>0141</code> 这个八进制数转换为十进制是 97。</li><li><code>System.out.println(0x61);</code>：这行代码展示了十六进制字面量在 Java 中的表示方式。<code>0x</code> 是 Java 中表示十六进制数的前缀。<code>0x61</code> 这个十六进制数转换为十进制是 97。与上一行代码类似，十六进制也是为了简化二进制的书写，同样印证了本章 “数据的表示” 重点。</li></ul>`,27)]))}const d=s(e,[["render",t]]),p=JSON.parse('{"path":"/notes/HMJava/eje47qjb/","title":"数据的表示详解","lang":"zh-CN","frontmatter":{"title":"数据的表示详解","createTime":"2025/06/24 19:26:56","permalink":"/notes/HMJava/eje47qjb/"},"readingTime":{"minutes":4.06,"words":1217},"git":{"createdTime":1752578196000,"updatedTime":1752578196000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员Java/1.基础入门/2.数据类型、运算符/1.数据的表示详解.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"7d7e6e","sort":10001,"name":"黑马程序员Java"},{"id":"31ae4c","sort":1,"name":"基础入门"},{"id":"0a51a1","sort":2,"name":"数据类型、运算符"}]}');export{d as comp,p as data};
