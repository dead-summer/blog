import{a as i,c as a,b as n,o as l}from"./app-CAzY0Upz.js";const e={};function h(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<p>在 Java 中，数据类型用于规定变量可以存储的数据类型。Java 的数据类型分为两大类：<strong>基本数据类型</strong> 和 <strong>引用数据类型</strong>。 本节主要介绍基本数据类型。</p><h2 id="_2-1-基本数据类型" tabindex="-1"><a class="header-anchor" href="#_2-1-基本数据类型"><span>2.1 基本数据类型</span></a></h2><p>Java 的基本数据类型共有 4 类 8 种，每种数据类型占用的内存空间和能够表示的数据范围各不相同。</p><h3 id="_2-1-1-整型" tabindex="-1"><a class="header-anchor" href="#_2-1-1-整型"><span>2.1.1 整型</span></a></h3><ul><li><code>byte</code>: 占用 1 字节 (8 bits)，表示范围为 -128 ~ 127。</li><li><code>short</code>: 占用 2 字节 (16 bits)，表示范围为 -32768 ~ 32767。</li><li><code>int</code>: 占用 4 字节 (32 bits)，表示范围为 -2147483648 ~ 2147483647。<strong>整数的字面量默认是 int 类型。</strong></li><li><code>long</code>: 占用 8 字节 (64 bits)，表示范围为 -9223372036854775808 ~ 9223372036854775807。<strong>如果需要表示 <code>long</code> 类型的字面量，需要在数值后加上 <code>L</code> 或 <code>l</code>。</strong></li></ul><h3 id="_2-1-2-浮点型" tabindex="-1"><a class="header-anchor" href="#_2-1-2-浮点型"><span>2.1.2 浮点型</span></a></h3><ul><li><code>float</code>: 占用 4 字节 (32 bits)，单精度浮点数。<strong>小数的字面量默认是 double 类型，如果需要表示 <code>float</code> 类型的字面量，需要在数值后加上 <code>F</code> 或 <code>f</code>。</strong></li><li><code>double</code>: 占用 8 字节 (64 bits)，双精度浮点数。<strong>小数的字面量默认是 double 类型。</strong></li></ul><h3 id="_2-1-3-字符型" tabindex="-1"><a class="header-anchor" href="#_2-1-3-字符型"><span>2.1.3 字符型</span></a></h3><ul><li><code>char</code>: 占用 2 字节 (16 bits)，表示 Unicode 字符。可以表示字母、数字、标点符号以及其他特殊字符，例如：<code>&#39;a&#39;</code>、<code>&#39;中&#39;</code>、<code>&#39;国&#39;</code>。</li></ul><h3 id="_2-1-4-布尔型" tabindex="-1"><a class="header-anchor" href="#_2-1-4-布尔型"><span>2.1.4 布尔型</span></a></h3><ul><li><code>boolean</code>: 占用空间大小取决于 JVM 实现，但只允许取 <code>true</code> 或 <code>false</code> 两个值。</li></ul><h2 id="_2-2-字面量的默认类型" tabindex="-1"><a class="header-anchor" href="#_2-2-字面量的默认类型"><span>2.2 字面量的默认类型</span></a></h2><p>需要注意的是，整数和小数的字面量拥有默认类型：</p><ul><li>整数的字面量，默认是 <code>int</code> 类型。</li><li>小数的字面量，默认是 <code>double</code> 类型。</li></ul><p>因此，在定义 <code>long</code> 和 <code>float</code> 类型的变量时，需要在字面量后分别添加 <code>L/l</code> 和 <code>F/f</code> 后缀。</p><p>下面的代码演示了如何使用这 8 种基本数据类型来定义变量，以及 <code>String</code> 引用数据类型：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> TypeDemo1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 目标：掌握8种基本数据类型，用来定义变量。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 1、整型</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        byte</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 98</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        short</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> number2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 9000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> number3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12323232</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 默认</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 注意：随便写一个整型字面量，默认是int类型的，73642422442424虽然没有超过long的范围，但是它超过了本身int的范围了。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 如果希望随便写一个整型字面量是long类型的，需要在其后面加上L/l</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        long</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> number4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 73642422442424L</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 2、浮点型</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        //注意:</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        //随便写一个小数字面量，默认当成double类型对待的，</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        //如果希望这个小数是float类型的，需要在后面加上：F/f</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        float</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> score1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 99.5F</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        double</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> score2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 99.8</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 默认定义方案。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 3、字符型</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        char</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ch1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">a</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        char</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ch2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">中</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        char</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ch3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">国</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 4、布尔型</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        boolean</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> b1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        boolean</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> b2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 引用数据类型：String.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // String代表的是字符串类型，定义的变量可以用来记住字符串。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        String</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">黑马</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>代码解释：</strong></p><p>这段代码主要演示了如何声明和初始化各种基本数据类型的变量。例如，<code>byte number = 98;</code> 声明了一个 <code>byte</code> 类型的变量 <code>number</code> 并赋值为 98。 需要注意的是，<code>long number4 = 73642422442424L;</code> 这行代码中，由于整数的字面量默认是 <code>int</code> 类型，因此如果需要赋值给 <code>long</code> 类型的变量，需要在字面量后面加上 <code>L</code>，表明这是一个 <code>long</code> 类型的数值。 同样地，<code>float score1 = 99.5F;</code> 这行代码中，由于小数的字面量默认是 <code>double</code> 类型，因此需要加上 <code>F</code> 表明这是一个 <code>float</code> 类型的数值。</p>`,19)]))}const p=i(e,[["render",h]]),d=JSON.parse('{"path":"/notes/HMJava/jbe91rd5/","title":"数据类型详解","lang":"zh-CN","frontmatter":{"title":"数据类型详解","createTime":"2025/06/24 19:38:43","permalink":"/notes/HMJava/jbe91rd5/"},"readingTime":{"minutes":3.01,"words":903},"git":{"createdTime":1752578196000,"updatedTime":1752578196000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员Java/1.基础入门/2.数据类型、运算符/2.数据类型详解.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"7d7e6e","sort":10001,"name":"黑马程序员Java"},{"id":"31ae4c","sort":1,"name":"基础入门"},{"id":"0a51a1","sort":2,"name":"数据类型、运算符"}]}');export{p as comp,d as data};
