import{a as s,c as e,b as a,o as n}from"./app-CAzY0Upz.js";const d={};function l(t,i){return n(),e("div",null,i[0]||(i[0]=[a(`<p>作为程序员，在进行配置管理时，经常会遇到配置集中化和分散化的选择。一开始，所有的配置都写在一起，但为了方便维护，后续会进行拆分。多环境开发也是如此，下面介绍如何基于多环境开发进行配置的独立管理，务必掌握。</p><h2 id="_1-准备工作" tabindex="-1"><a class="header-anchor" href="#_1-准备工作"><span><strong>1. 准备工作</strong></span></a></h2><p>将所有配置根据功能拆分成独立的配置文件，并按照以下规则命名：</p><ul><li><code>application-devDB.yml</code></li><li><code>application-devRedis.yml</code></li><li><code>application-devMVC.yml</code></li></ul><p>这种命名方式清晰地表明了配置文件的用途和所属环境。</p><h2 id="_2-使用-include-属性" tabindex="-1"><a class="header-anchor" href="#_2-使用-include-属性"><span><strong>2. 使用 include 属性</strong></span></a></h2><p>可以使用 <code>include</code> 属性在激活指定环境的情况下，同时加载多个环境的配置，使它们生效。多个环境之间使用逗号分隔。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spring</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  profiles</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    include</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> devDB,devRedis,devMVC</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上配置相当于在加载 <code>dev</code> 环境配置的同时，额外加载 <code>devDB</code>、<code>devRedis</code> 和 <code>devMVC</code> 这三组配置。这种结构使得配置更加清晰，易于理解各个环境的具体配置内容。</p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>当主环境（如 <code>dev</code>）与其他环境有相同属性时，主环境的属性生效；如果其他被包含的环境之间存在相同属性，则最后加载的环境的属性生效。</p></div><h2 id="_3-使用-group-属性进行改良" tabindex="-1"><a class="header-anchor" href="#_3-使用-group-属性进行改良"><span><strong>3. 使用 group 属性进行改良</strong></span></a></h2><p>上面的配置方式存在一个问题：如果要将环境从 <code>dev</code> 切换到 <code>pro</code>，<code>include</code> 属性也需要修改。因为 <code>include</code> 属性只能使用一次，这会带来不便。从 Spring Boot 2.4 版本开始，可以使用 <code>group</code> 属性替代 <code>include</code> 属性，以减少配置的书写量。简单来说，就是预先定义好不同环境对应的配置组，然后根据需要选择使用哪个组。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spring</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  profiles</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    group</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dev</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> devDB,devRedis,devMVC</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">pro</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> proDB,proRedis,proMVC</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">      &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">test</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> testDB,testRedis,testMVC</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，如果要将环境从 <code>dev</code> 切换到 <code>pro</code>，只需要修改 <code>active</code> 属性即可。这种方式更加简洁，提高了配置切换的效率。</p><p>在多环境配置管理中，<code>group</code> 属性通过预定义不同环境下的配置组，实现了环境切换的便捷性。这不仅简化了配置文件的维护工作，还降低了因手动修改配置而引入错误的风险。例如，在微服务架构中，不同的服务可能需要连接到不同的数据库或消息队列，使用 <code>group</code> 属性可以轻松地为每个环境配置正确的连接信息。</p>`,15)]))}const h=s(d,[["render",l]]),r=JSON.parse('{"path":"/notes/HMSpringBoot/ehv8wlom/","title":"3-4.多环境开发独立配置文件书写技巧","lang":"zh-CN","frontmatter":{"title":"3-4.多环境开发独立配置文件书写技巧","createTime":"2025/06/23 14:13:01","permalink":"/notes/HMSpringBoot/ehv8wlom/"},"readingTime":{"minutes":2.22,"words":666},"git":{"createdTime":1752578290000,"updatedTime":1752578290000,"contributors":[{"name":"dead_summer","username":"","email":"2941325451@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/d7f172441d823f01ad688f425860dbe76a31ea11c9936176bbd8c14670a619f8?d=retro"}]},"filePathRelative":"notes/黑马程序员SpringBoot/2.运维实用篇/3.多环境开发/3-4.多环境开发独立配置文件书写技巧.md","headers":[]}');export{h as comp,r as data};
